//MODEL (бизнес - логика)
//Тип, который описывает все категории товаров, представленные в макете интернет-магазина
type ProductCategory = "софт-скил" | "кнопка" | "другое" | "хард-скил" | "дополнительное";

//Данные по карточке товара, которые мы получаем с сервера
interface IСardApi {  
    id: string; //идентификатор товара  
    description: string; //описание товара  
    image: string; //изображение товара  
    title: string; //название товара  
    category: ProductCategory; //категория товара  
    price: number | null; //цена товара  
}  

//Данные, связанные с корзиной
interface ICardBasket {  
    selected: boolean; //значение выбора  
    addToBasket(): void; //метод добавления в корзину  
    removeFromBasket(): void; //метод удаления из корзины  
}

//Общий интерфейс
interface ICard extends IСardApi, ICardBasket {}  

// Тип, который описывает все возможные варианты оплаты товаров
type PaymentType = "Онлайн" | "При получении";

//Форма для указания способа оплаты и адреса доставки
interface IOrderDeliveryPaymentForm {  
	payment: PaymentType; //способ оплаты  
	address: string; // адрес доставки  
}

//Форма для указания контактов пользователя
interface IOrderContactsForm {  
    email: string; //email пользователя  
    phone: string; //телефон пользователя  
}  

//Общая форма заказа
interface IOrderCommonForm extends IOrderDeliveryPaymentForm, IOrderContactsForm {} 

//Итоговый интерфейс оформления заказа
interface IOderForm extends IOrderCommonForm {  
    items: ICard[]; //перечень карточек в корзине (беру из postman название значения)  
    validateOderForm(): boolean; //функция проверки корректности введенных пользователем данных  
    validateEmail(): boolean; //функция проверки корректности введенных пользователем данных - email  
    validatePhone(): boolean; //функция проверки корректности введенных пользователем данных - номера телефона  
    validatePayment(): boolean; //функция проверки корректности выбора способа оплаты - онлайн или при получении  
    validateAdress(): boolean;//функция проверки корректности введенных пользователем данных - адрес  
    clearOderForm(): void; //очистка формы  
    submitOder(): void; //завершение оформления  
}  

//Интерфейс для отправки данных на сервер
interface IOrderAPI extends IOderForm{
    items: ICard[]; // покупаемые товары
	total: number; // общая сумма заказа
}

//Интерфейс самого приложения
interface IAppState {  
    cardList: ICard[]; //перечень карточек  
    selectCard: ICard; //карточка при открытии  
    order: IOderForm; //оформление заказа  
    basket: ICard[]; //перечень карточек в корзине  
    isCardInBasket(): boolean;//метод для проверки наличия товара в корзине   
    getCardInBasket(): number;//метод получить количество карточек в корзине  
    getCardIdInBasket(): number;//метод получить id карточек в корзине  
    getTotalPrice(): number;//метод отобразить сумму заказа по всем карточкам в корзине, меняется в зависимости от доб./удаления карточек  
    makeOrder(): void;//метод сдеалть заказ  
    clearBasket(): void;//метод очистить данные корзины после подтверждения оформления заказа  
} 


//PRESENTER
//Брокер событий будет связывать бизнес-логику и интерфейс приложения

//VIEW
//Интерфейс (изображение) приложения
//Содержит следующие сущности:
//Главная страница. Отображается список карточек товаров и корзину.
//Карточка товара
//Модальное окно (контент, кнопка)
//Корзина состоит из двух сущностей: отображение самой корзины с общей суммой товаров и нумерованный список самих товаров, включающий порядковый номер в списке, название товара, цена товара, кнопка удалить (реализована методом удаления)
//Формы оформления заказа. В первой указан способ оплаты и адрес доставки. Во второй email пользователя и телефон. Поля для заполнения проходят валидацию.
//Окно успешного завершения заказа